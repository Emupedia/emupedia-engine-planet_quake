<!DOCTYPE html>
<html>

<head>
	<title>quakejs</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
	<link rel="stylesheet" type="text/css" href="./main.css">
</head>

<body>
	<div id="viewport-frame">
		<div id="dialog">
			<h4 class="title"></h4>
			<p class="description"></p>
		</div>
		<div id="loading">
			<div id="loading-progress">
				<div class="description"></div>
				<div class="bar-wrapper">
					<div class="bar">&nbsp;</div>
				</div>
			</div>
		</div>
	</div>
</body>

<script>
	var ioq3;

	function updateVideoCmd() {
		var update = 'set r_fullscreen %fs; set r_mode -2; set r_customPixelAspect 1; set r_customWidth %w; set r_customHeight %h; vid_restart; '
			.replace('%fs', window.fullscreen ? '1' : '0')
			.replace('%w', ioq3.viewport.offsetWidth)
			.replace('%h', ioq3.viewport.offsetHeight)
		ioq3._Cbuf_AddText(allocate(intArrayFromString(update), 'i8', ALLOC_STACK));
		ioq3._Cbuf_Execute();
	}

	var resizeDelay;
	function resizeViewport() {
		if (!ioq3.canvas) {
			// ignore if the canvas hasn't yet initialized
			return;
		}

		if (resizeDelay) clearTimeout(resizeDelay);
		resizeDelay = setTimeout(updateVideoCmd, 100);
	}

	window.onload = function () {
		IDBFS.loadRemoteEntry = function (store, path, callback) {
			var req = store.get(path);
			req.onsuccess = function (event) {
				callback(null, {
					timestamp: event.target.result.timestamp,
					mode: event.target.result.mode,
					contents: MEMFS.getFileDataAsTypedArray(event.target.result)
				});
			};
			req.onerror = function (e) {
				callback(this.error);
				e.preventDefault();
			};
		};
		Module['onRuntimeInitialized'] = () => {
			ioq3 = Module;

			ioq3.viewport = document.getElementById('viewport-frame');
			ioq3.elementPointerLock = true;
			window.addEventListener('resize', resizeViewport);

			// merge default args with query string args
			var args = [
				//'+set', 'sv_dlURL', '"http://localhost:9000"',
				'+set', 'fs_game', 'baseq3',
				'+set', 'net_noudp', '1',
				'+set', 'net_enabled', '1',
				'+set', 'developer', '0',
				'+set', 'fs_debug', '0',
				'+set', 'r_fullscreen', window.fullscreen ? '1' : '0',
				'+set', 'r_mode', '-2',
				'+set', 'r_customPixelAspect', '1',
				'+set', 'r_customHeight', '' + window.innerHeight,
				'+set', 'r_customWidth', '' + window.innerWidth,
				'+set', 'sv_pure', '0',
				// these settings were set by the emscripten build
				//'+connect', '127.0.0.1:27960',
				/*
				'+set', 'r_normalMapping', '0',
				'+set', 'r_specularMapping', '0',
				'+set', 'r_deluxeMapping', '0',
				'+set', 'r_hdr', '0',
				'+set', 'r_picmip', '0',
				'+set', 'g_spVideos', '\\tier1\\1\\tier2\\2\\tier3\\3\\tier4\\4\\tier5\\5\\tier6\\6\\tier7\\7\\tier8\\8',
				'+set', 'g_spSkill', '5',
				'+set', 'g_spScores5', '\\l21\\5\\l14\\5\\l22\\5\\l25\\5\\l5\\5\\l3\\5\\l2\\5\\l20\\2\\l19\\1\\l1\\5\\l0\\5\\l24\\1',
				'+iamacheater',
				'+iamamonkey',
				'+exec', 'client.cfg',
				//	'+map', 'Q3DM17'
				*/
			];
			// merge default args with query string args
			var search = window.location.search.substring(1);
			args.push.apply(
				args, 
				search.length > 0
					? search
					.split(/[&=]+/ig)
					.reduce((arr, arg) => (arr.push
						.apply(arr, decodeURIComponent(arg)
						.split(/\s+/ig)
						.map((a, i) => i === 0 && a[0] !== '+'
							? ('+' + a)
							: a)), arr), [])
					: []);
			ioq3.callMain(args);
		}
	};
</script>
<script type="text/javascript" src="/ioquake3.js"></script>

</html>
